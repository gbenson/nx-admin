---
- name: "{{ item | title }}'s user exists and is in the correct groups"
  ansible.builtin.user:
    name: "{{ item }}"
    password: "*"
    home: /nonexistent
    create_home: no
    shell: /usr/sbin/nologin
    umask: "0077"
    groups: "{{ supplementary_groups.get(item, '') }}"
  vars:
    supplementary_groups:
      carla: nx-sniffers
      daniel: nx-sniffers
      ethan: nx-sniffers
      susan: nx-sniffers
      steve: nx-sniffers
  become: yes

- name: "{{ item | title }}'s home directory does not exist"
  ansible.builtin.file:
    path: "~{{ item }}"
    state: absent
  become: yes

- name: "{{ item | title }}'s systemd service unit is configured"
  ansible.builtin.copy:
    dest: "/etc/systemd/system/{{ item }}.service"
    owner: root
    group: root
    mode: "0644"
    content: |
      [Unit]
      Description={{ item | title }}
      Wants=redis.target
      Documentation=https://github.com/gbenson/nx-workers

      [Service]
      Type=simple
      ExecStart=/opt/nx/workers/bin/{{ item }}
      ExecReload=/bin/kill -HUP $MAINPID
      Restart=always

      DynamicUser=yes

      AmbientCapabilities=CAP_NET_RAW    # Grant the capability
      CapabilityBoundingSet=CAP_NET_RAW  # Don't ever get others
      NoNewPrivileges=yes

      ProtectSystem=strict
      ProtectHome=yes
      PrivateTmp=yes
      PrivateDevices=yes
      ProtectKernelLogs=yes
      ProtectKernelTunables=yes
      ProtectControlGroups=yes
      ReadOnlyDirectories=/
      UMask=077

      [Install]
      WantedBy=multi-user.target
  become: yes
  when: item != "kaitlin" and item != "susan"

- name: "{{ item | title }} is enabled and running"
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: "{{ 'false' if item == 'ethan' else 'true' }}"
    masked: no
    state: "{{ 'stopped' if item == 'ethan' else 'started' }}"
  become: yes
  when: item != "kaitlin" and item != "susan"
