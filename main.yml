---
- hosts: slice
  vars_files:
    - vars/network.yml
    - vars/workers.yml

  tasks:
    - debug:
        var: ansible_facts
      tags:
        - never
        - debug

    - name: Remote user's home directory has correct permissions
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}"
        mode: "og-rwx"
      tags:
        - users

    - name: Remote user is in correct groups
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: sudo
      become: yes
      tags:
        - users

    - name: Remote user has safe bash aliases
      ansible.builtin.copy:
        dest: ~/.bash_aliases
        content: |
          alias ll="ls -l"
          alias rm="rm -i"
          alias cp="cp -i"
          alias mv="mv -i"

    - name: System has predictable network interface names
      ansible.builtin.file:
        path: "/etc/systemd/network/{{ item }}"
        # For eth[012] create symlinks to /dev/null to
        # mask the files in /usr/lib/systemd/network.
        # This is the Raspbian GNU/Linux 11 (bullseye)
        # default:
        #   state: link
        #   src: /dev/null
        #
        # For enx[0-9a-f]{12}, delete the symlinks to
        # unmask the rules in /usr/lib/systemd/network:
        #   state: absent
        state: absent
      loop:
        - 99-default.link
        - 73-usb-net-by-mac.link
      become: yes
      tags:
        - network

    - name: Wi-Fi is configured
      ansible.builtin.copy:
        dest: /etc/wpa_supplicant/wpa_supplicant.conf
        owner: root
        group: root
        mode: "0600"
        content: "{{ wpa_supplicant_conf }}"
      become: yes
      tags:
        - network

    - name: Required packages are installed
      ansible.builtin.apt:
        pkg:
          - libcap-ng-utils
          - python3-venv
          - redis-server
          - tcpdump
          - tmux
          - unattended-upgrades
      become: yes
      tags:
        - packages
        - redis

    - name: Unattended upgrades are configured
      ansible.builtin.debconf:
        name: unattended-upgrades
        question: unattended-upgrades/enable_auto_updates
        value: yes
        vtype: boolean
      become: yes
      tags:
        - packages

    - name: Unattended upgrades are enabled
      ansible.builtin.lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: ^(APT::Periodic::{{ item }})
        line: \g<1> "1";
        backrefs: yes
      loop:
        - Update-Package-Lists
        - Unattended-Upgrade
      become: yes
      tags:
        - packages

    - name: Redis is configured
      ansible.builtin.lineinfile:
        path: /etc/redis/redis.conf
        regexp: ^#?\s*({{ item.keyword }})(\s+{{ item.args }})?
        line: \g<1> {{ item.args }}
        backrefs: yes
      loop:
        - { keyword: bind,           args: 127.0.0.1 }
        - { keyword: protected-mode, args: "yes" }
        - { keyword: maxclients,     args: 100 }
      become: yes
      tags:
        - redis

    - name: Redis is enabled and running
      ansible.builtin.systemd:
        name: redis
        enabled: true
        masked: no
        state: started
      become: yes
      tags:
        - redis

    - name: Root-owned deployment directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - /opt/nx
        - /opt/nx/secrets
        - /var/lib/nx
      become: yes
      tags:
        - deploy
        - workers

    - name: Deployment user exists and is in correct groups
      ansible.builtin.user:
        name: nx-deploy
        password: "*"
        home: /var/lib/nx/deploy
        umask: "0077"
        groups: []
      become: yes
      tags:
        - deploy
        - users

    - name: Deployment-user-owned directories exist
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: nx-deploy
        group: nx-deploy
        mode: "{{ item.mode }}"
      loop:
        - { path: ~nx-deploy,         mode: "0700" }
        - { path: ~nx-deploy/.ssh,    mode: "0700" }
        - { path: /var/lib/nx/wheels, mode: "0755" }
        - { path: /opt/nx/workers,    mode: "0755" }
      become: yes
      tags:
        - deploy

    - name: Deployment user has ~/.ssh/authorized_keys
      ansible.builtin.copy:
        src: ~/.ssh/authorized_keys
        dest: ~nx-deploy/.ssh/authorized_keys
        owner: nx-deploy
        group: nx-deploy
        mode: "0600"
      become: yes
      tags:
        - deploy

    - name: Workers' credentials are installed and configured
      ansible.builtin.include_tasks:
        file: tasks/inject-credentials.yml
        apply:
          tags:
            - always
      vars:
        credentials: "{{ workers[name].credentials }}"
      loop: "{{ workers | list }}"
      loop_control:
        loop_var: name
      when: "'credentials' in workers[name]"
      tags:
        - workers

    - name: Worker services are created and running
      ansible.builtin.include_tasks:
        file: tasks/worker.yml
        apply:
          tags:
            - always
      loop: "{{ workers | list }}"
      tags:
        - workers
