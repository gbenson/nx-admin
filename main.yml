---
- hosts: slice
  tasks:
    - name: Lock down home directory
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}"
        mode: "og-rwx"

    - name: Remove me from unnecessary groups
      ansible.builtin.command:
        argv:
          - /usr/bin/gpasswd
          - --delete
          - "{{ ansible_user_id }}"
          - "{{ item }}"
      register: command_result
      changed_when: "not 'is not a member of' in command_result.stderr"
      failed_when: false
      loop:
        - adm
        - audio
        - cdrom
        - dialout
        - games
        - gpio
        - i2c
        - input
        - netdev
        - plugdev
        - render
        - spi
        - users
        - video
      become: yes

    - name: Configure bash
      ansible.builtin.copy:
        dest: ~/.bash_aliases
        content: |
          alias ll="ls -l"
          alias rm="rm -i"
          alias cp="cp -i"
          alias mv="mv -i"

    - name: Enable predictable network interface names
      ansible.builtin.file:
        path: "/etc/systemd/network/{{ item }}"
        # For eth[012] create symlinks to /dev/null to
        # mask the files in /usr/lib/systemd/network.
        # This is the Raspbian GNU/Linux 11 (bullseye)
        # default:
        #   state: link
        #   src: /dev/null
        #
        # For enx[0-9a-f]{12}, delete the symlinks to
        # unmask the rules in /usr/lib/systemd/network:
        #   state: absent
        state: absent
      loop:
        - 99-default.link
        - 73-usb-net-by-mac.link
      become: yes

    - name: Install packages
      ansible.builtin.apt:
        pkg:
          - python3-venv
          - redis-server
          - tcpdump
      become: yes
      tags:
        - redis

    - name: Configure Redis
      ansible.builtin.lineinfile:
        path: /etc/redis/redis.conf
        regexp: ^#?\s*({{ item.keyword }})(\s+{{ item.args }})?
        line: \g<1> {{ item.args }}
        backrefs: yes
      loop:
        - { keyword: bind,           args: 127.0.0.1 }
        - { keyword: protected-mode, args: "yes" }
        - { keyword: aclfile,        args: /etc/redis/users.acl }
        - { keyword: maxclients,     args: 100 }
      become: yes
      tags:
        - redis

    - name: Enable and start Redis
      ansible.builtin.systemd:
        name: redis
        enabled: true
        masked: no
        state: started
      become: yes
      tags:
        - redis
